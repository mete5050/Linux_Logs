import subprocess
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart

# Run a Linux command and capture its output
cmd = "tree /home/mete/Ä°ndirilenler"
output = subprocess.check_output(cmd, shell=True)
print(output)
# Save the command output to a text file
with open('command_output.txt', 'wb') as f:
    f.write(output)

# Create the email message
msg = MIMEMultipart()
msg['From'] = 'meteeker1750@gmail.com'
msg['To'] = 'metearduino@gmail.com'
msg['Subject'] = 'Linux command output'
print("create e mail")
# Attach the command output file to the email message
with open('command_output.txt', 'rb') as f:
    body = MIMEText(f.read().decode('utf-8'))
msg.attach(body)
print("Send Mail")
# Send the email
smtp_server = 'smtp.gmail.com'
smtp_port = 587
smtp_user = 'meteeker1750@gmail.com'
smtp_password = 'mete2002'
smtp_connection = smtplib.SMTP(smtp_server, smtp_port)
smtp_connection.starttls()
smtp_connection.login(smtp_user, smtp_password)
smtp_connection.sendmail(msg['From'], msg['To'], msg.as_string())
smtp_connection.quit()
import subprocess
from github import Github

# Authentication
g = Github('YOUR_GITHUB_TOKEN')

# Get the repository where you want to save the files
repo = g.get_repo('USERNAME/REPO_NAME')

# Define the commands to run
commands = ['ls -l', 'df -h', 'uname -a']

# Run the commands and save their outputs to separate files
for i, command in enumerate(commands):
    result = subprocess.run(command, shell=True, capture_output=True, text=True)
    filename = f'output_{i}.txt'
    with open(filename, 'w') as file:
        file.write(result.stdout)

    # Upload or update the file on GitHub
    with open(filename, 'r') as file:
        file_contents = file.read()
    try:
        file = repo.get_contents(filename)
        repo.update_file(file.path, 'commit message', file_contents, file.sha)
        print(f'File {filename} updated successfully!')
    except:
        repo.create_file(filename, 'commit message', file_contents)
        print(f'File {filename} uploaded successfully!')

import subprocess
from github import Github

# Authentication
g = Github('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')


# Get the repository where you want to save the files
try:
    repo = g.get_repo('mete5050/Linux_Logs')
except:
    print("Could not connected to github")
    exit()
    
# Define the commands to run
commands = ['apt list', 'dpkg -l', 'uname -a','snap list','tree /home/mete/','pip list','history','cat *.py */*','find /home/mete/ -type f -name "*.py" -print0 | xargs -0 cat','tree /home/mete *','','']

# Run the commands and save their outputs to separate files
for i, command in enumerate(commands):
    try:
        print(i)
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        filename = f'output_{i}.txt'
        print("Got command output")
        
        with open(filename, 'w') as file:
            file.write(result.stdout)
        print("Saved command output to txt file")
        
        # Upload or update the file on GitHub
        with open(filename, 'r') as file:
            file_contents = file.read()
        
        try:
            file = repo.get_contents(filename)
            repo.update_file(file.path, 'commit message', file_contents, file.sha)
            print(f'File {filename} updated successfully!')
        except:
            repo.create_file(filename, 'commit message', file_contents)
            print(f'File {filename} uploaded successfully!')
    except:
        i=i+1
        print(f'File {filename} could not uploaded successfully!')
